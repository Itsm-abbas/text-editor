{"version":3,"sources":["Components/Navbar.js","Components/Alert.js","Components/Main.js","Components/Contact.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","style","backgroundColor","className","mode","to","title","type","id","onClick","toggleMode","role","htmlFor","Alert","height","alert","msg","Main","useState","text","settext","wordLenght","split","filter","removespaces","trim","placeholder","value","onChange","e","target","rows","disabled","length","converting","toUpperCase","showalert","toLowerCase","sentencecase","slice","document","getElementById","select","navigator","clipboard","writeText","getSelection","removeAllRanges","Contact","App","setalert","message","setTimeout","setmode","body","classList","remove","cursor","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.6fae3f9e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav\r\n      style={{ backgroundColor: \"blue\" }}\r\n      className={`navbar navbar-expand-lg bg-${props.mode} navbar-${props.mode}`}\r\n    >\r\n      <div className=\"container-fluid\">\r\n        <Link className=\"navbar-brand \" to=\"/\">\r\n          {props.title}\r\n        </Link>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">\r\n                Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link\r\n                className=\"nav-link active\"\r\n                aria-current=\"page\"\r\n                to=\"/contact\"\r\n              >\r\n                Contact\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n\r\n          <div\r\n            className={`form-check form-switch text-${\r\n              props.mode === \"dark\" ? \"light\" : \"dark\"\r\n            }`}\r\n          >\r\n            <input\r\n              onClick={props.toggleMode}\r\n              className=\"form-check-input\"\r\n              type=\"checkbox\"\r\n              role=\"switch\"\r\n              id=\"switchDark\"\r\n            />\r\n            <label className=\"form-check-label\" htmlFor=\"switchDark\">\r\n              Switch to Dark\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n  return (\r\n    <div className='container' style={{ height: '2rem' }}>\r\n      {props.alert && <div className=\"alert alert-success\" role=\"alert\">\r\n        {props.alert.type}! {props.alert.msg}\r\n      </div>}\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState } from \"react\";\r\nexport default function Main(props) {\r\n  // Converting text to Upper Case\r\n  function ToUpperCase() {\r\n    let converting = text.toUpperCase();\r\n    settext(converting);\r\n    props.showalert(\"Converted to Upper Case\", \"Success\");\r\n  }\r\n  // Converting text to Lower Case\r\n  function ToLowerCase() {\r\n    let converting = text.toLowerCase();\r\n    settext(converting);\r\n    props.showalert(\"Converted to Lower Case\", \"Success\");\r\n  }\r\n  function Changetext(e) {\r\n    settext(e.target.value);\r\n  }\r\n  // Making the first letter capital\r\n  function Sentencecase() {\r\n    let sentencecase = text[0].toUpperCase() + text.slice(1);\r\n    settext(sentencecase);\r\n    props.showalert(\"Converted to Sentence Case\", \"Success\");\r\n  }\r\n  // Clear the Text Area\r\n  function Cleartext() {\r\n    settext(\"\");\r\n    props.showalert(\"Text area have been cleared\", \"Success\");\r\n  }\r\n  // Copy Text****\r\n  function CopyText() {\r\n    let text = document.getElementById(\"textbox\");\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n    document.getSelection().removeAllRanges();\r\n    props.showalert(\"Text copied to Clipboard\", \"Success\");\r\n  }\r\n  let [text, settext] = useState(\"\");\r\n  // Not adding empty spaces***\r\n  let wordscount = text.split(/\\s/);\r\n  let wordLenght = wordscount.filter((removespaces) => {\r\n    return removespaces.trim() !== \"\";\r\n  });\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"mt-4\">\r\n        <label\r\n          htmlFor=\"exampleFormControlTextarea1\"\r\n          className={`form-label text-${\r\n            props.mode === \"dark\" ? \"light\" : \"dark\"\r\n          }`}\r\n        >\r\n          Enter text:\r\n        </label>\r\n        <textarea\r\n          placeholder=\"Enter text here\"\r\n          value={text}\r\n          onChange={Changetext}\r\n          className={`form-control text-${\r\n            props.mode === \"light\" ? \"dark\" : \"light\"\r\n          }`}\r\n          id=\"textbox\"\r\n          rows=\"8\"\r\n        ></textarea>\r\n      </div>\r\n      <button\r\n        disabled={text.length === 0}\r\n        className={`btn btn-${\r\n          props.mode === \"light\" ? \"dark\" : \"light\"\r\n        } mt-3 mx-1`}\r\n        onClick={ToUpperCase}\r\n      >\r\n        To Upper Case\r\n      </button>\r\n      <button\r\n        disabled={text.length === 0}\r\n        className={`btn btn-${\r\n          props.mode === \"light\" ? \"dark\" : \"light\"\r\n        } mt-3 mx-1`}\r\n        onClick={ToLowerCase}\r\n      >\r\n        To Lower Case\r\n      </button>\r\n      <button\r\n        disabled={text.length === 0}\r\n        className={`btn btn-${\r\n          props.mode === \"light\" ? \"dark\" : \"light\"\r\n        } mt-3 mx-1`}\r\n        onClick={Cleartext}\r\n      >\r\n        Clear Text\r\n      </button>\r\n      <button\r\n        disabled={text.length === 0}\r\n        className={`btn btn-${\r\n          props.mode === \"light\" ? \"dark\" : \"light\"\r\n        } mt-3 mx-1`}\r\n        onClick={Sentencecase}\r\n      >\r\n        Sentence Case\r\n      </button>\r\n      <button\r\n        disabled={text.length === 0}\r\n        className={`btn btn-${\r\n          props.mode === \"light\" ? \"dark\" : \"light\"\r\n        } mt-3 mx-1`}\r\n        onClick={CopyText}\r\n      >\r\n        Copy Text\r\n      </button>\r\n      <div className=\"my-3\">\r\n        <h6\r\n          className={`form-label text-${\r\n            props.mode === \"dark\" ? \"light\" : \"dark\"\r\n          }`}\r\n        >\r\n          {text.length} Characters and {wordLenght.length} words\r\n        </h6>\r\n        <h4\r\n          className={`form-label text-${\r\n            props.mode === \"dark\" ? \"light\" : \"dark\"\r\n          }`}\r\n        >\r\n          Preview\r\n        </h4>\r\n        <h6\r\n          className={`form-label text-${\r\n            props.mode === \"dark\" ? \"light\" : \"dark\"\r\n          }`}\r\n        >\r\n          {text.length > 0 ? text : \"Add something in Textarea to Preview\"}\r\n        </h6>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nexport default function Contact(props) {\r\n  return (\r\n    <div className='container my-4'>\r\n      <form>\r\n        <div className=\"mb-1\">\r\n          <label htmlFor=\"exampleInputEmail1\" className={`form-label text-${props.mode === 'light' ? 'dark' : 'light'}`}>\r\n            Email address\r\n          </label>\r\n          <input\r\n            style={props.mode === 'light' ? { backgroundColor: 'white' } : { backgroundColor: '#afafaf' }}\r\n            type=\"email\"\r\n            className=\"form-control\"\r\n            id=\"exampleInputEmail1\"\r\n            aria-describedby=\"emailHelp\"\r\n          />\r\n          <div id=\"emailHelp\" className=\"form-text text-light\">\r\n            We'll never share your email with anyone else.\r\n          </div>\r\n        </div>\r\n        <div className=\"form-floating\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            placeholder=\"Leave a comment here\"\r\n            id=\"textbox\"\r\n            style={{ height: '200px' }}\r\n          ></textarea>\r\n          <label htmlFor=\"floatingTextarea2\">Type Message here</label>\r\n        </div>\r\n        <button type=\"submit\" className={`btn btn-${props.mode === 'light' ? 'dark' : 'light'} my-4`}>\r\n          Submit\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import Navbar from \"./Components/Navbar\";\nimport Alert from \"./Components/Alert\";\nimport Main from \"./Components/Main\";\nimport Contact from \"./Components/Contact\";\nimport React, { useState } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nfunction App() {\n  const [alert, setalert] = useState(null);\n  const showalert = (message, type) => {\n    setalert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setalert(null);\n    }, 1500);\n  };\n  const [mode, setmode] = useState(\"light\");\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      removecls();\n      setmode(\"dark\");\n      document.body.style.backgroundColor = \"#565656\";\n      document.getElementById(\"textbox\").style.backgroundColor = \"#afafaf\";\n      document.getElementById(\"textbox\").style.cursor = \"white\";\n      showalert(\"Dark mode successfully activated\", \"Success\");\n      document.title = \"Text Editor - Dark Mode\";\n    } else {\n      setmode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      document.getElementById(\"textbox\").style.backgroundColor = \"white\";\n      showalert(\"Light mode successfully activated\", \"Success\");\n      document.title = \"Text Editor - Light Mode\";\n    }\n  };\n\n  function removecls() {\n    document.body.classList.remove(\"bg-info\");\n    document.body.classList.remove(\"bg-success\");\n    document.body.classList.remove(\"bg-danger\");\n    document.body.classList.remove(\"bg-primary\");\n  }\n  return (\n    <Router>\n      <Navbar title=\"Dreamer\" mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert} />\n      <Switch>\n        <Route path=\"/contact\">\n          <Contact mode={mode} />\n        </Route>\n        <Route path=\"/\">\n          <Main mode={mode} showalert={showalert} />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\nreportWebVitals();\n"],"sourceRoot":""}